ld ternary_search(ld l,ld r) {
    ld eps = 1e-12, ans = 1e18;
    while (r - l > eps) {
        ld mid1 = l + (r - l) / 3;
        ld mid2 = r - (r - l) / 3;
        ld f1 = cal(mid1);
        ld f2 = cal(mid2);
        ans = min(ans , f1);
        ans = min(ans , f2);
        if (f1 > f2)
            l = mid1;
        else
            r = mid2;
    }
    return ans;
}

ll ternarySearch(ll l, ll r) 
{
    ll ans = 1e18; 
    while (l <= r) {   
        ll mid1 = l + (r - l) / 3; 
	ll mid2 = r - (r - l) / 3; 
	ll f1 = cal(mid1);
	ll f2 = cal(mid2);	
	ans = min( ans , f1);
	ans = min( ans , f2);
        if (f1 > f2)
            l = mid1 + 1; 
        else
            r = mid2 - 1;  
    } 
    return ans; 
} 