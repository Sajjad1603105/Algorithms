#include<bits/stdc++.h>
using namespace std;
struct node {
    int overlap,nonoverlap,agerval;
    node* next[26];
    node()
    {
        overlap=nonoverlap=agerval=0;
        for (int i = 0; i < 26; i++)
            next[i] = NULL;
    }
} * root;
void insert(string str,int suru)
{
    int len=str.size();
    node* curr = root;
    for (int i = 0; i < len; i++) {
        int id = str[i] - 'a';
        if (curr->next[id] == NULL)
            curr->next[id] = new node();
        curr = curr->next[id];
        if(curr->overlap==0) curr->agerval=suru+i,curr->nonoverlap++;
        else if(suru>curr->agerval)
        {
            curr->agerval=suru+i;
            curr->nonoverlap++;
        }
        curr->overlap++;
    }
}
int search(string str,int x)
{
    int len=str.size();
    node* curr = root;
    for (int i = 0; i < len; i++) {
        int id = str[i] - 'a';
        if (curr->next[id] == NULL)
            return 0;
        curr = curr->next[id];
    }
    if(x==0) return curr->overlap;
    else return curr->nonoverlap;
}
void del(node* cur)
{
    for (int i = 0; i < 26; i++)
        if (cur->next[i])
            del(cur->next[i]);
    delete(cur);
}
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0),cout.tie(0);
    int caseno=0;
    while(1)
    {
       string s,st;
       cin>>s;
       int n=s.size(),q,c;
       if(n==0) break;
       root = new node();
       for(int i=0;i<n;i++){
           insert(s.substr(i,min(n-i,6)),i);
       }
       cin>>q;
       cout<<"Case "<<++caseno<<"\n";
       for(int i=0;i<q;i++)
       {
           cin>>c>>st;
           cout<<search(st,c)<<"\n";
       }
       cout<<"\n";
       del(root);
    }
    return 0;
}
